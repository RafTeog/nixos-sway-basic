# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot={
	initrd ={
		availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usb_storage" "usbhid" "sd_mod" ];
  		kernelModules = [ ];
	};
  	kernelModules = [ "kvm-amd" "amdgpu" ];
  	extraModulePackages = [ ];
  	kernelPackages = pkgs.linuxPackages_zen;
  	# Bootloader.
  	loader={
		systemd-boot.enable = true;
  		efi.canTouchEfiVariables = true;
		};
  	kernelParams = ["apm=power_off" "acpi=force" "reboot=acpi"];

	};
  fileSystems."/" =
    { device = "/dev/disk/by-uuid/71ccf6fb-f283-40a2-b943-57a09b7d738e";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/555A-EED7";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp7s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
